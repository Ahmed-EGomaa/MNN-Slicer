//#include "thermistortables.h"
#include <stdlib.h>

#define X_STEP_PIN         54
#define X_DIR_PIN          55
#define X_ENABLE_PIN       38
float stepsPerRevolutionX;

#define Y_STEP_PIN         60
#define Y_DIR_PIN          61
#define Y_ENABLE_PIN       56
float stepsPerRevolutionY;

#define Z_STEP_PIN         46
#define Z_DIR_PIN          48
#define Z_ENABLE_PIN       62
const int stepsPerRevolutionZ = 10000;

#define E_STEP_PIN         26
#define E_DIR_PIN          28
#define E_ENABLE_PIN       24
const int stepsPerRevolutionE = 5000;

#define Q_STEP_PIN         36
#define Q_DIR_PIN          34
#define Q_ENABLE_PIN       30
const int stepsPerRevolutionQ = 5000;
float s;
String receivedString;
int commaIndex;
int r;


void setup() {

  pinMode(X_STEP_PIN  , OUTPUT);
  pinMode(X_DIR_PIN    , OUTPUT);
  pinMode(X_ENABLE_PIN    , OUTPUT);
  
  pinMode(Y_STEP_PIN  , OUTPUT);
  pinMode(Y_DIR_PIN    , OUTPUT);
  pinMode(Y_ENABLE_PIN    , OUTPUT);
  
  pinMode(Z_STEP_PIN  , OUTPUT);
  pinMode(Z_DIR_PIN    , OUTPUT);
  pinMode(Z_ENABLE_PIN    , OUTPUT);
  
  pinMode(E_STEP_PIN  , OUTPUT);
  pinMode(E_DIR_PIN    , OUTPUT);
  pinMode(E_ENABLE_PIN    , OUTPUT);
  
  pinMode(Q_STEP_PIN  , OUTPUT);
  pinMode(Q_DIR_PIN    , OUTPUT);
  pinMode(Q_ENABLE_PIN    , OUTPUT);
  
   digitalWrite(X_ENABLE_PIN    , LOW);
    digitalWrite(Y_ENABLE_PIN    , LOW);
    digitalWrite(Z_ENABLE_PIN    , LOW);
    digitalWrite(E_ENABLE_PIN    , LOW);
    digitalWrite(Q_ENABLE_PIN    , LOW);
    Serial.begin(115200);
}


void XAxisRight()
{
   for(int x = 0; x < r; x++)
  {
   digitalWrite(X_DIR_PIN, LOW);
    digitalWrite(X_STEP_PIN, HIGH);
    delayMicroseconds(500);
    digitalWrite(X_STEP_PIN, LOW);
    delayMicroseconds(500);

EAxisUp();
      
  }
}


void XAxisLeft()
{
     for(int x = 0; x < r; x++)
  {
   digitalWrite(X_DIR_PIN, HIGH);
    digitalWrite(X_STEP_PIN, HIGH);
    delayMicroseconds(500);
    digitalWrite(X_STEP_PIN, LOW);
    delayMicroseconds(500);

EAxisUp();
      
      }
}


void YAxisLeft()
{
  
   for(int y = 0; y < r; y++)
  {
   digitalWrite(Y_DIR_PIN, HIGH);
    digitalWrite(Y_STEP_PIN, HIGH);
    delayMicroseconds(500);
    digitalWrite(Y_STEP_PIN, LOW);
    delayMicroseconds(500);

 EAxisUp();    
  }
}


void YAxisRight()
{
  
   for(int y = 0; y < r; y++)
  {
 digitalWrite(Y_DIR_PIN, LOW);
    digitalWrite(Y_STEP_PIN, HIGH);
    delayMicroseconds(500);
    digitalWrite(Y_STEP_PIN, LOW);
    delayMicroseconds(500);

  EAxisUp();    
  }
}



void ZAxisUp()
{
   digitalWrite(Z_DIR_PIN, HIGH);
    digitalWrite(Z_STEP_PIN, HIGH);
    delayMicroseconds(500);
    digitalWrite(Z_STEP_PIN, LOW);
    delayMicroseconds(500);
}


void ZAxisDown()
{
 digitalWrite(Z_DIR_PIN, LOW);
    digitalWrite(Z_STEP_PIN, HIGH);
    delayMicroseconds(500);
    digitalWrite(Z_STEP_PIN, LOW);
    delayMicroseconds(500);
}

void QAxisUp()
{
   digitalWrite(Q_DIR_PIN, HIGH);
    digitalWrite(Q_STEP_PIN, HIGH);
    delayMicroseconds(1);
    digitalWrite(Q_STEP_PIN, LOW);
    delayMicroseconds(1);
}


void QAxisDown()
{
 digitalWrite(Q_DIR_PIN, LOW);
    digitalWrite(Q_STEP_PIN, HIGH);
    delayMicroseconds(500);
    digitalWrite(Q_STEP_PIN, LOW);
    delayMicroseconds(500);
}

void EAxisUp()
{
   digitalWrite(E_DIR_PIN, HIGH);
    digitalWrite(E_STEP_PIN, HIGH);
    delayMicroseconds(1);
    digitalWrite(E_STEP_PIN, LOW);
    delayMicroseconds(1);
}


void EAxisDown()
{
 digitalWrite(E_DIR_PIN, LOW);
    digitalWrite(E_STEP_PIN, HIGH);
    delayMicroseconds(500);
    digitalWrite(E_STEP_PIN, LOW);
    delayMicroseconds(500);
}

void loop() {
    if (Serial.available() > 0) {
        // Read the received data from Python
        String receivedData = Serial.readStringUntil('\n');
        Serial.println("Received Data:");
        Serial.println(receivedData);
        
        commaIndex = receivedData.indexOf(',');

        if (commaIndex != -1) {
            String firstPart = receivedData.substring(0, commaIndex);
            String secondPart = receivedData.substring(commaIndex + 1);
            s= atof(secondPart.c_str())/10;
            r= (2000*s)/13;
            
            if (firstPart == "downtry") { 
              YAxisRight();   //down
              delay(200); }

            if (firstPart == "down") { 
              YAxisRight();   //down
              delay(200);  
              
                Serial.println("donedown");}
            
            if (firstPart == "right") {
              XAxisLeft();   //right
              delay(200); 
              Serial.println("doneright");
            }
            if (firstPart == "right1") { 
              XAxisLeft();   //right
              delay(200); 
              Serial.println("doneright1");
            }
             if (firstPart == "rightfinal") { 
              XAxisLeft();   //right
              delay(200);     
              Serial.println("donefinal");
            }
            if (firstPart == "up") { 
              YAxisLeft();  //up
              delay(200); 
                Serial.println("doneup");
            }
            if (firstPart == "upfinal" ) {
              YAxisLeft();  //up
              delay(200); 
              Serial.println("donefinal");
            }
            if (firstPart == "downfinal") { 
              YAxisRight();   //down
              delay(200);   
              Serial.println("donefinal");
            }

        }
    }
}
